import Head from 'next/head';
import { NextPage } from 'next';
import Layout from '@components/common/Layout';
import { useState, FunctionComponent, useEffect } from 'react';
import axiosClient from '@utils/api';
import useAsyncEffect from 'use-async-effect';
import {
  ChevronLeftIcon,
  ChevronRightIcon,
  EditIcon,
  ExternalLinkIcon,
  MailIcon,
  PlusIcon,
  SearchIcon,
  SpinnerIcon,
  TrashIcon
} from '@assets/icons';

import Tippy from '@tippyjs/react';
import Tooltip from '@components/common/Tooltip';
import { useRouter } from 'next/router';
import { formatMoney } from '@utils/index';
import Link from 'next/link';
import dayjs from '@utils/dayjs';
import ReactPaginate from 'react-paginate';
import dynamic from 'next/dynamic';
import { delay } from '@utils/misc';
import { motion } from 'framer-motion';
import EmptyOrder from '../../../public/assets/images/empty-order.png';
import { isEmpty } from 'lodash';
import AuthInput from '@components/common/auth/AuthInput';
import AuthSubmitButton from '@components/common/auth/AuthSubmitButton';
import { toast } from 'react-toastify';

const NavigationMenu = dynamic(
  () => import('@components/admin/navigation/NavigationMenu'),
  {
    ssr: false
  }
);
type Props = any;

const Loading: FunctionComponent<any> = () => {
  return (
    <tr>
      <td
        colSpan={10}
        className="h-[80vh] w-full items-center justify-center bg-transparent select-none table-cell"
      >
        <div className="flex items-center justify-center">
          <SpinnerIcon className="animate-spin mr-2" /> Loading...
        </div>
      </td>
    </tr>
  );
};

const ForgetPassword: NextPage<Props> = () => {
  const [products, setProducts] = useState<any[]>([]);
  const [brands, setBrands] = useState<any[]>([]);
  const [isLoading, setLoading] = useState(false);

  const [email, setEmail] = useState('');
  const [itemsPerPage] = useState(10);
  const router = useRouter();
  const [pageCount, setPageCount] = useState(1);
  const [currentPage, setCurrentPage] = useState(
    parseInt((router.query.page as any) || 1)
  );

  const handleResetRequest = async (e: any) => {
    e.preventDefault();
    try {
      setLoading(true);
      const result = await axiosClient.post('/auth/resetPasswordRequest', {
        email
      });
      toast.success(result);
    } catch (e) {
      console.log(e);
    } finally {
      setLoading(false);
    }
  };
  return (
    <Layout>
      <Head>
        <title>Đặt lại mật khẩu</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center overflow-auto md:h-[calc(100vh-4rem)] h-[calc(100vh-3.5rem)] bg-main">
        <div className="flex flex-row flex-1">
          <div className="flex-1 h-full max-h-full overflow-y-auto">
            <div className="max-w-screen-xl m-auto h-full">
              <div className="p-4">
                <div className="flex items-center justify-between py-8 flex-col">
                  <div className="">
                    <h2 className="text-black font-medium text-xl">
                      Đặt lại mật khẩu
                    </h2>
                  </div>
                  <div className=" w-96">
                    <form onSubmit={handleResetRequest}>
                      <div className="flex items-center justify-between w-full">
                        <input
                          value={email}
                          onChange={(e) => setEmail(e.target.value)}
                          type={'text'}
                          className="w-full block border h-11 placeholder:text-13 placeholder:text-gray-400 text-gray-900 rounded focus:outline-none mt-5 border-gray-300 focus:border-primary py-2 px-4"
                          autoComplete="off"
                          placeholder={'Email'}
                        />
                      </div>
                      <AuthSubmitButton
                        isLoading={isLoading}
                        width="100%"
                        title="Đặt lại mật khẩu"
                      />
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </Layout>
  );
};

export default ForgetPassword;
