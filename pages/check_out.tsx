import { useAppDispatch } from '@app/store';
import { CheckCircleIcon, XCircleIcon } from '@assets/icons';
import { NextPage } from 'next';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import querystring from 'qs';
import Layout from '@components/common/Layout';
import Head from 'next/head';

function sortObject(o: Record<string, unknown>) {
  const sorted: Record<string, unknown> = {};
  let key;
  const a = [];

  for (key in o) {
    // eslint-disable-next-line no-prototype-builtins
    if (o.hasOwnProperty(key)) {
      a.push(key);
    }
  }

  a.sort();

  for (key = 0; key < a.length; key++) {
    sorted[a[key]] = o[a[key]];
  }
  return sorted;
}

type Props = any;
const CheckOutStatusPage: NextPage<Props> = () => {
  const router = useRouter();
  const dispatch = useAppDispatch();
  const [code, setCode] = useState<unknown>();
  const vnp_Params = router.query as Record<string, unknown>;
  const secureHash = vnp_Params['vnp_SecureHash'];
  let vnp_Params_clone = { ...vnp_Params };
  delete vnp_Params_clone['vnp_SecureHash'];
  delete vnp_Params_clone['vnp_SecureHashType'];

  vnp_Params_clone = sortObject(vnp_Params_clone);

  const secretKey = 'UQYXWZZTIUVNBOXTHSPCAMWIUWULSRQH';

  // eslint-disable-next-line @typescript-eslint/no-var-requires
  const sha256 = require('sha256');
  const signData = `${secretKey}${querystring.stringify(vnp_Params_clone, {
    encode: false
  })}`;

  const checkSum = sha256(signData);

  useEffect(() => {
    console.log(secureHash, checkSum);
    if (secureHash === checkSum) {
      setCode(vnp_Params['vnp_ResponseCode']);
      // removeLocalStorage('cart');
      // dispatch({ type: 'DELETE_CART' });
    }
  }, []);
  return (
    <Layout>
      <Head>
        <title>Thanh toán</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center overflow-auto h-main bg-main">
        <div className="max-w-screen-xl w-full px-4">
          <div className="flex items-center justify-center mt-12">
            <div className="flex flex-col items-center">
              {code === '00' ? (
                <>
                  <CheckCircleIcon className="w-12 h-12 text-[#52c41a]" />
                  <div className="mt-6 text-2xl">Giao dịch thành công</div>
                </>
              ) : (
                <>
                  <XCircleIcon className="w-12 h-12 text-[#ff4d4f]" />
                  <div className="mt-6 text-2xl">Giao dịch thất bại</div>
                </>
              )}
              <button
                className="bg-[#1890ff] w-96 text-white text-center block cursor-pointer rounded mt-8 py-3 px-2 border-none hover:opacity-80"
                onClick={() => router.replace('/dien-thoai')}
              >
                Tiếp tục
              </button>
            </div>
          </div>
        </div>
      </main>
    </Layout>
  );
};
export default CheckOutStatusPage;
