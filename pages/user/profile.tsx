import Breadcrumb from '@components/breadcrumb';
import { default as Input } from '@components/common/auth/AuthInput';
import Divider from '@components/common/Divider';
import Layout from '@components/common/Layout';
import SideBar from '@components/common/user/SideBar';
import { Store } from '@reduxjs/toolkit';
import axiosClient from '@utils/api';
import { noop } from 'lodash';
import { NextPage, NextPageContext } from 'next';
import Head from 'next/head';
import { parseCookies } from 'nookies';
import { useState } from 'react';

type Props = {
  user: any;
};
const AccountPage: NextPage<Props> = ({ user }) => {
  const [userProfile, setUserProfile] = useState(user);
  return (
    <Layout>
      <Head>
        <title>Thông tin tài khoản</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center overflow-auto h-main bg-main">
        <div className="max-w-screen-xl w-full">
          <div className="p-4 justify-center flex-col flex gap-x-4">
            <Breadcrumb
              breadcrumbs={[
                { value: 'Trang chủ', href: '/dien-thoai' },
                { value: 'Thông tin tài khoản', href: '/profile' }
              ]}
            />
            <Divider className="mt-0 mb-4" />
          </div>
          <div className="flex">
            <SideBar active="profile" />
            <div className="flex-1">
              <div>Thông tin tài khoản</div>
              <div className="bg-white flex flex-nowrap rounded-lg justify-between">
                <div className="w-[560px] p-4 pr-6">
                  <Input
                    value={userProfile.name}
                    placeholder={'Họ tên'}
                    onChange={noop}
                  />
                </div>
                <div className="my-4 border-l-px border-[#ebebf0]"></div>
                <div className="w-[calc(100%-560px)] p-4 pl-6 flex flex-col"></div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </Layout>
  );
};

AccountPage.getInitialProps = async (
  context: NextPageContext & { store: Store }
) => {
  const cookies = parseCookies(context);
  const TOKENS = cookies['TOKENS'] || '{}';
  const TOKENS_VALUE = JSON.parse(TOKENS);
  try {
    const userProfile = await axiosClient.get('/auth/profile', {
      headers: {
        Authorization: TOKENS_VALUE.accessToken
          ? `Bearer ${TOKENS_VALUE.accessToken}`
          : ''
      }
    });
    return { user: userProfile };
  } catch (err) {
    return {
      user: null
    };
  }
};

export default AccountPage;
