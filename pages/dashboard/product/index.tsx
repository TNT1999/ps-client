import Head from 'next/head';
import { NextPage } from 'next';
import NavigationMenu from '@components/admin/navigation/NavigationMenu';
import Layout from '@components/common/Layout';
import { useState, FunctionComponent } from 'react';
import axiosClient from '@utils/api';
import useAsyncEffect from 'use-async-effect';
import {
  EditIcon,
  ExternalLinkIcon,
  EyeIcon,
  SpinnerIcon,
  TrashIcon
} from '@assets/icons';
import { ProductType } from '@types';
import Tippy from '@tippyjs/react';
import Tooltip from '@components/common/Tooltip';
import { useRouter } from 'next/router';
import { formatMoney } from '@utils/index';
import Link from 'next/link';

type Props = any;

const Loading: FunctionComponent<any> = () => {
  return (
    <div className="h-full w-full flex items-center justify-center bg-white select-none">
      <div className="flex items-center">
        <SpinnerIcon className="animate-spin mr-2" /> Loading...
      </div>
    </div>
  );
};

const ListProductPage: NextPage<Props> = () => {
  const [products, setProducts] = useState<any[]>([]);
  const [brands, setBrands] = useState<any[]>([]);
  const [isPreLoading, setPreLoading] = useState(false);
  const router = useRouter();
  useAsyncEffect(async () => {
    setPreLoading(true);
    const [result, brands] = await Promise.all([
      axiosClient.get('origin/products'),
      axiosClient.get('brands')
    ]);
    setProducts(result as any);
    setBrands(brands as any);
    setPreLoading(false);
  }, []);

  return (
    <Layout admin>
      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col h-full overflow-hidden pt-14">
        <div className="h-14 fixed bg-white inset-x-0 top-0 flex shadow-sm z-[100]"></div>
        <div className="flex flex-row flex-1 overflow-hidden">
          <NavigationMenu />
          <div className="max-w-screen-xl flex-1 h-full max-h-full overflow-y-auto m-auto">
            {isPreLoading ? (
              <Loading />
            ) : (
              <div className="p-8">
                <div className="mb-6">Input search</div>
                <div className="p-4">
                  <div className="App">
                    <table className="w-full">
                      <tr className=" bg-gray-500 py-8">
                        <th className="text-left w-2/5 bg-[#fafafa] p-4">
                          Name
                        </th>
                        <th className="text-right bg-[#fafafa] p-4">Brand</th>
                        <th className="text-right bg-[#fafafa] p-4">Price</th>
                        <th className="bg-[#fafafa] p-4 text-right">
                          Discount ( % )
                        </th>
                        <th className="bg-[#fafafa] p-4">Actions</th>
                      </tr>
                      {products.map((product, index) => {
                        return (
                          <tr key={index}>
                            <td className="p-4 py-2 border border-[#eeeeee]">
                              <div className="flex items-center">
                                <img
                                  src={product.thumbnail}
                                  className="h-16 w-16 object-contain"
                                  alt=""
                                />
                                <div className="ml-5">{product.name}</div>
                              </div>
                            </td>
                            <td className="p-4 border border-[#eeeeee] text-right">
                              {brands.find(
                                (brand) =>
                                  product.productFields.brand === brand.id
                              )?.name || 'Untitle'}
                            </td>
                            <td className="p-4 border border-[#eeeeee] text-right">
                              {formatMoney(product.price)}
                            </td>
                            <td className="p-4 border border-[#eeeeee] text-right">
                              {product.discount}%
                            </td>
                            <td className="border border-[#eeeeee] flex justify-center h-full">
                              {/* <div className="flex"> */}
                              <span className="flex items-center text-[#616c7a]">
                                <Tippy
                                  arrow={true}
                                  placement={'top'}
                                  content={<Tooltip text={'Open'} />}
                                  delay={100}
                                >
                                  <span>
                                    <Link href={`/dien-thoai/${product.slug}`}>
                                      <a target="_blank">
                                        <ExternalLinkIcon className="h-5 w-5 text-gray-700 m-[0.4375rem] cursor-pointer" />
                                      </a>
                                    </Link>
                                  </span>
                                </Tippy>
                              </span>

                              <span className="flex items-center text-[#616c7a]">
                                <Tippy
                                  arrow={true}
                                  placement={'top'}
                                  content={<Tooltip text={'Edit'} />}
                                  delay={100}
                                >
                                  <span>
                                    <EditIcon
                                      className="h-5 w-5 text-gray-700 m-[0.4375rem] cursor-pointer"
                                      onClick={() =>
                                        router.push(
                                          `/dashboard/product/${product.slug}`
                                        )
                                      }
                                    />
                                  </span>
                                </Tippy>
                              </span>
                              <span className="flex items-center text-[#616c7a]">
                                <Tippy
                                  arrow={true}
                                  placement={'top'}
                                  content={<Tooltip text={'Delete'} />}
                                  delay={100}
                                >
                                  <span>
                                    <TrashIcon className="h-5 w-5 m-[0.4375rem] text-red-500 cursor-pointer" />
                                  </span>
                                </Tippy>
                              </span>
                              {/* </div> */}
                            </td>
                          </tr>
                        );
                      })}
                    </table>
                  </div>
                  {/* <Table
                    className="abc"
                    rowClassName="row"
                    dataSource={products}
                    // pagination={false}
                    bordered
                    rowKey={(record) => record.id}
                    size="small"
                  >
                    <Column
                      width={'40%'}
                      title="Name"
                      dataIndex="name"
                      key="name"
                      align="left"
                      render={(product: any, record: any) => (
                        <div className="flex items-center">
                          <img
                            src={record.thumbnail}
                            className="h-16 w-16 object-contain border border-[#eeeeee] rounded"
                            alt=""
                          />
                          <div className="ml-5">{product}</div>
                        </div>
                      )}
                    />
                    <Column
                      width={'20%'}
                      title="Price"
                      dataIndex="price"
                      key="price"
                      align="right"
                      render={(price) => <>{formatMoney(price)}</>}
                    />
                    <Column
                      width={'20%'}
                      title="Discount ( % )"
                      dataIndex="discount"
                      key="discount"
                      align="right"
                      render={(discount) => <>{discount}</>}
                    />
                    <Column
                      width={'20%'}
                      title="Action"
                      key="action"
                      align="center"
                      // colSpan={1}
                      render={(_: any, record: any) => (
                        <Space
                          size="middle"
                          className="flex justify-center items-center"
                        >
                          <span className="flex items-center text-[#616c7a]">
                            <Tippy
                              arrow={true}
                              placement={'top'}
                              content={<Tooltip text={'Open'} />}
                              delay={100}
                            >
                              <span>
                                <Link href={`/dien-thoai/${record.slug}`}>
                                  <a target="_blank">
                                    <ExternalLinkIcon className="h-5 w-5 text-gray-700 m-[0.4375rem] cursor-pointer" />
                                  </a>
                                </Link>
                              </span>
                            </Tippy>
                          </span>
                          <span className="flex items-center text-[#616c7a]">
                            <Tippy
                              arrow={true}
                              placement={'top'}
                              content={<Tooltip text={'Edit'} />}
                              delay={100}
                            >
                              <span>
                                <EditIcon
                                  className="h-5 w-5 text-gray-700 m-[0.4375rem] cursor-pointer"
                                  onClick={() =>
                                    router.push(
                                      `/dashboard/product/${record.slug}`
                                    )
                                  }
                                />
                              </span>
                            </Tippy>
                          </span>
                          <span className="flex items-center text-[#616c7a]">
                            <Tippy
                              arrow={true}
                              placement={'top'}
                              content={<Tooltip text={'Delete'} />}
                              delay={100}
                            >
                              <span>
                                <TrashIcon className="h-5 w-5 m-[0.4375rem] text-red-500 cursor-pointer" />
                              </span>
                            </Tippy>
                          </span>
                        </Space>
                      )}
                    />
                  </Table> */}

                  {/* <Table
                    aria-label="Example table with custom cells"
                    css={{
                      height: 'auto',
                      minWidth: '100%',
                      boxShadow: 'none'
                    }}
                    selectionMode="none"
                  >
                    <Table.Header columns={columns}>
                      {(column: any) => (
                        <Table.Column
                          key={column.uid}
                          hideHeader={column.uid === 'actions'}
                          align={
                            column.uid === 'actions'
                              ? 'center'
                              : column.uid === 'discount'
                              ? 'end'
                              : 'start'
                          }
                        >
                          {column.name}
                        </Table.Column>
                      )}
                    </Table.Header>
                    <Table.Body items={products}>
                      {(item: ProductType) => (
                        <Table.Row>
                          {(columnKey: any) => (
                            <Table.Cell>
                              {renderCell(item, columnKey)}
                            </Table.Cell>
                          )}
                        </Table.Row>
                      )}
                    </Table.Body>
                  </Table> */}
                </div>
                {/* <div className="flex justify-start mt-8">
                  <Pagination
                    total={12}
                    initialPage={1}
                    // className="pt-8 pr-4"
                  />
                </div> */}
              </div>
            )}
          </div>
        </div>
      </main>
    </Layout>
  );
};

export default ListProductPage;
